class Solution {
public:
    int singleNonDuplicate(vector<int>& nums) {
        int n=nums.size();
        int ans =0;
        map<int,int>mp;
        for(int i=0;i<n;i++)
        {
            mp[nums[i]]++;
        }
        for(auto it : mp)
        {
            if(it.second==1)
            {
                ans = it.first;
            }
        }
        return ans;
        // int lo=0;
        // int hi=n-1;
        
        // while(lo<hi)
        // {
        //     int mid = lo+(hi-lo)/2;
        //     if(nums[mid] != nums[mid-1] && nums[mid] != nums[mid+1])
        //     {
        //         return nums[mid];
        //     }
        //     else if(nums[hi] == nums[hi-1])
        //     {
        //         hi -= 2;
        //     }
        //     else if(nums[lo] == nums[lo+1])
        //     {
        //         lo += 2;
        //     }
            
        // }
        // return nums[lo];
        
        
    }
};
