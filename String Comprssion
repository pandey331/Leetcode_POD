class Solution {
public:
// Initialize two pointers, i and j, to 0. Pointer i will be used to traverse the input array, while pointer j will be used to modify the array in place.
// While i is less than the length of the input array, do the following:
// a. Initialize a variable count to 1. This variable will keep track of the number of consecutive repeating characters in the input array.
// b. While i is less than the length of the input array minus 1, and the character at index i is equal to the character at index i+1, increment count and i.
// c. Write the character at index i to the output array at index j, and increment both i and j.
// d. If count is greater than 1, convert it to a string and write each character of the string to the output array at index j, incrementing j for each character.
// Return j, which is the length of the compressed array.
    int compress(vector<char>& chars) {
        int n = chars.size();
        //base case 
        if(n==1) return 1;
        
        //using two pointer approcah
        int i=0,j=0;
        while(i<n)
        {
            int count =1; //eveytime we reset count at 1 whenever we found new char
            while( i<n-1 && chars[i]==chars[i+1])
            {
                count++;
                i++;
            }
        
        //write character at index i in output array j and increment both i and j
        chars[j++] = chars[i++];

        if(count >1)
        {
            string countstr = to_string(count);
            for(char it:countstr)
            {
                chars[j++] = it;
            }   
        }
     }
        return j; 
    }
};
