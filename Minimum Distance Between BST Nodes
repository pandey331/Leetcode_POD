/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    
     public:
     vector<int>inorder;
    void dfs(TreeNode* node)
    {
        if(node==nullptr) return;
        dfs(node->left);
        inorder.push_back(node->val);
        dfs(node->right);
    }

    int minDiffInBST(TreeNode* root) {
        if(root==nullptr) return 0;
        dfs(root);
        int mini=INT_MAX;
        for(int i=1;i<inorder.size();i++)
        {
          mini = min(mini,inorder[i]-inorder[i-1]);
        }
        return mini;
        
        
    }
};
