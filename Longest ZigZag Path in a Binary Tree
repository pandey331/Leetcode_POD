/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

//RECURSIVE SOLUTION
//APPROACH:

//**** WE TAKE A BOOL GOLEFT IF WE HAVE TO GO TO GO LEFT AND WE ARE GOING TO LEFT 
//THEN INCREMENT STEPS BY 1 AND SET GOLEFT TO FALSE 
//IF WE ARE GOING TO RIGHT THEN SET STEPS TO 1 AND SET GOLEFT TO TRUE *****

//*** ELSE IF WE HAVE TO GO TO RIGHT AND WE ARE GOING TO RIGHT THEN INCREMENT STEPS BY 1 AND SET GOLEFT TO TRUE
//IF WE ARE GOING TO LEFT THEN  SET STEPS TO 1 AND SET BOOL LEFT TO FALSE ***

//UPDATE MAXPATH BY MAXIMUM

    int maxpath=0;
   void solve(TreeNode* root,int steps,bool goleft)
   {
       if(root==NULL) return;
       maxpath=max(maxpath,steps);
       if(goleft==true)
       {
           solve(root->left,steps+1,false);
           solve(root->right,1,true);
       }
       else
       {
           solve(root->right,steps+1,true);
           solve(root->left,1,false);
       }
   }
    int longestZigZag(TreeNode* root) {
        solve(root,0,true);
        solve(root,0,false);
        return maxpath;
    }
};
