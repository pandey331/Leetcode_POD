class Solution {
public:
    int minReorder(int n, vector<vector<int>>& connections) {
        vector<vector<int>>adj(n),rev(n);
        for(auto it:connections)
        {
            adj[it[0]].push_back(it[1]); // this is normal adjacency list 
            rev[it[1]].push_back(it[0]); //this is reverse adjacency list
        }
        int ans =0;
        queue<int>q;
        vector<int>vis(n,0);
        vis[0]=1;
        q.push(0);
        while(!q.empty())
        {
            int node = q.front();
            vis[node]=1;
            q.pop();
            //for outgoing edges which gives us answer
            for(auto it:adj[node])
            {
                if(!vis[it])
                {
                    ans++;
                    vis[it] = 1;
                    q.push(it);
                }
            }
            //for incoming  edges
            for(auto it:rev[node])
            {
                if(!vis[it])
                {
                    vis[it]=1;
                    q.push(it);
                }
            }
        }
        return ans;
        
    }
};
